
.program hsync_in_14M


pull block                  ; Pull from FIFO to OSR (only once)
mov y, osr                  ; Copy value from OSR to y scratch register

.wrap_target

mov x, y                    ; Initialize counter variable

wait 1 irq 5                ; Wait for vsync active mode

lineout:
    ; SYNC PULSE
    wait 1 pin 0            ; polarity: +
    wait 0 pin 0 [15]

    ;; CGA/EGA 14MHz (15kHz HSYNC)
    nop [31]
    nop [31]

    irq 4                   ; hsync active mode
    jmp x-- lineout         ; Stay here thru frame active mode

.wrap



% c-sdk {
static inline void hsync_in_14M_program_init(PIO pio, uint sm, uint offset, uint pin, uint16_t div_int, uint8_t div_frac) {

    pio_sm_config c = hsync_in_14M_program_get_default_config(offset);

    sm_config_set_in_pins(&c, pin);

    // 14.318MHz  CGA/EGA  //clkdiv=2
    //sm_config_set_clkdiv(&c, 2);
    sm_config_set_clkdiv_int_frac(&c, div_int, div_frac);

    pio_gpio_init(pio, pin);
    gpio_pull_up(pin);

    // pin direction: input
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, false);

    pio_sm_init(pio, sm, offset, &c);

    // pio_sm_set_enabled(pio, sm, true);
}
%}
